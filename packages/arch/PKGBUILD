# Maintainer: 0xrushi <your-email@example.com>
pkgname=termclip
pkgver=0.0.0.r8.b6f5a76
pkgrel=1
pkgdesc="Cross-platform terminal clipboard helper with OSC 52 support"
arch=('any')
url="https://github.com/0xrushi/termclip"
license=('MIT')
depends=('python')
optdepends=(
    'xclip: X11 clipboard support'
    'xsel: Alternative X11 clipboard support'
    'wl-clipboard: Wayland clipboard support'
    'tmux: Enhanced tmux clipboard support'
)
makedepends=('git')
provides=('termclip')
conflicts=('termclip')
source=("git+https://github.com/0xrushi/termclip.git#branch=master")

pkgver() {
    cd "$srcdir/$pkgname"
    # Simple version using commit hash
    printf "%s.r%s.%s" "0.0.0" \
           "$(git rev-list --count HEAD)" \
           "$(git rev-parse --short HEAD)"
}

prepare() {
    cd "$srcdir/$pkgname"
    # Ensure we have a clean working directory
    git reset --hard HEAD
    git clean -fd
    
    # Create version.txt from git tag
    git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//' > version.txt
}

build() {
    cd "$srcdir/$pkgname"
    # No compilation needed for Python script, but we can add validation
    echo "Building termclip..."
}

check() {
    cd "$srcdir/$pkgname"
    
    # Basic syntax check
    echo "Running syntax check..."
    python -m py_compile termclip.py
    
    # Run basic tests if they exist
    if [ -f "test.sh" ]; then
        echo "Running tests..."
        bash test.sh
    fi
    
    # Check if the script is executable
    if [ ! -x "termclip.py" ]; then
        echo "Making termclip.py executable..."
        chmod +x termclip.py
    fi
}

package() {
    cd "$srcdir/$pkgname"
    
    # Install the script
    install -Dm755 termclip.py "$pkgdir/usr/bin/termclip"
    
    # Install documentation
    install -Dm644 README.md "$pkgdir/usr/share/doc/$pkgname/README.md"
    
    # Install license
    install -Dm644 LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
    

}
